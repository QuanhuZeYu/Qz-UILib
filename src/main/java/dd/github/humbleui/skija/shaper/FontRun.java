// Generated by delombok at Thu Feb 13 14:20:21 UTC 2025
package io.github.humbleui.skija.shaper;

import io.github.humbleui.skija.Font;
import io.github.humbleui.skija.impl.Native;
import io.github.humbleui.skija.impl.ReferenceUtil;
import org.jetbrains.annotations.*;

public class FontRun {
    @ApiStatus.Internal
    public final int _end;
    @ApiStatus.Internal
    public final Font _font;

    @ApiStatus.Internal
    public long _getFontPtr() {
        try {
            return Native.getPtr(_font);
        } finally {
            ReferenceUtil.reachabilityFence(_font);
        }
    }

    @SuppressWarnings("all")
    public FontRun(final int end, final Font font) {
        this._end = end;
        this._font = font;
    }

    @SuppressWarnings("all")
    public int getEnd() {
        return this._end;
    }

    @SuppressWarnings("all")
    public Font getFont() {
        return this._font;
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this)
            return true;
        if (!(o instanceof FontRun))
            return false;
        final FontRun other = (FontRun) o;
        if (!other.canEqual((Object) this))
            return false;
        if (this.getEnd() != other.getEnd())
            return false;
        final Object this$_font = this.getFont();
        final Object other$_font = other.getFont();
        if (this$_font == null ? other$_font != null : !this$_font.equals(other$_font))
            return false;
        return true;
    }

    @SuppressWarnings("all")
    protected boolean canEqual(final Object other) {
        return other instanceof FontRun;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + this.getEnd();
        final Object $_font = this.getFont();
        result = result * PRIME + ($_font == null ? 43 : $_font.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "FontRun(_end=" + this.getEnd() + ", _font=" + this.getFont() + ")";
    }
}
