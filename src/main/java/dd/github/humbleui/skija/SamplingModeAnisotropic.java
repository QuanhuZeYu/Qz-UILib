// Generated by delombok at Thu Feb 13 14:20:21 UTC 2025
package io.github.humbleui.skija;

import org.jetbrains.annotations.*;

public class SamplingModeAnisotropic implements SamplingMode {
    @ApiStatus.Internal
    public final int _maxAniso;

    public SamplingModeAnisotropic(int maxAniso) {
        assert maxAniso >= 1 : "Expected maxAniso = " + maxAniso + " >= 1";
        _maxAniso = maxAniso;
    }

    @ApiStatus.Internal
    @Override
    public long _pack() {
        return 4611686018427387904L | (4611686018427387903L & _maxAniso);
    }

    @SuppressWarnings("all")
    public int getMaxAniso() {
        return this._maxAniso;
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this)
            return true;
        if (!(o instanceof SamplingModeAnisotropic))
            return false;
        final SamplingModeAnisotropic other = (SamplingModeAnisotropic) o;
        if (!other.canEqual((Object) this))
            return false;
        if (this.getMaxAniso() != other.getMaxAniso())
            return false;
        return true;
    }

    @SuppressWarnings("all")
    protected boolean canEqual(final Object other) {
        return other instanceof SamplingModeAnisotropic;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + this.getMaxAniso();
        return result;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "SamplingModeAnisotropic(_maxAniso=" + this.getMaxAniso() + ")";
    }
}
