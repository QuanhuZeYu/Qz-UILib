// Generated by delombok at Thu Feb 13 14:20:21 UTC 2025
package io.github.humbleui.skija;

import io.github.humbleui.types.*;
import org.jetbrains.annotations.*;

/**
 * Contains the state used to create the layer
 */
public class SaveLayerRec {
    @ApiStatus.Internal
    @Nullable
    public final Rect _bounds;
    @ApiStatus.Internal
    @Nullable
    public final Paint _paint;
    @ApiStatus.Internal
    @Nullable
    public final ImageFilter _backdrop;
    @ApiStatus.Internal
    public final int _flags;

    /**
     * Sets bounds, paint, and backdrop to null. Clears flags.
     */
    public SaveLayerRec() {
        this(null, null, null, new SaveLayerRecFlag[0]);
    }

    /**
     * Sets bounds and paint. Sets backdrop to null, clears flags
     *
     * @param bounds layer dimensions; may be null
     * @param paint  applied to layer when overlaying prior layer; may be null
     */
    public SaveLayerRec(@Nullable Rect bounds, @Nullable Paint paint) {
        this(bounds, paint, null, new SaveLayerRecFlag[0]);
    }

    /**
     * Sets bounds, paint, and flags. Sets backdrop to null
     *
     * @param bounds layer dimensions; may be null
     * @param paint  applied to layer when overlaying prior layer; may be null
     * @param flags  options to modify layer
     */
    public SaveLayerRec(@Nullable Rect bounds, @Nullable Paint paint, SaveLayerRecFlag... flags) {
        this(bounds, paint, null, flags);
    }

    /**
     * Sets bounds, paint, and backdrop
     *
     * @param bounds   layer dimensions; may be null
     * @param paint    applied to layer when overlaying prior layer; may be null
     * @param backdrop If not null, this causes the current layer to be filtered by
     *                 backdrop, and then drawn into the new layer
     *                 (respecting the current clip).
     *                 If null, the new layer is initialized with transparent-black.
     */
    public SaveLayerRec(@Nullable Rect bounds, @Nullable Paint paint, @Nullable ImageFilter backdrop) {
        this(bounds, paint, backdrop, new SaveLayerRecFlag[0]);
    }

    /**
     * Sets bounds, paint, backdrop and flags
     *
     * @param bounds   layer dimensions; may be null
     * @param paint    applied to layer when overlaying prior layer; may be null
     * @param backdrop If not null, this causes the current layer to be filtered by
     *                 backdrop, and then drawn into the new layer
     *                 (respecting the current clip).
     *                 If null, the new layer is initialized with transparent-black.
     * @param flags    options to modify layer
     */
    public SaveLayerRec(Rect bounds, Paint paint, ImageFilter backdrop, SaveLayerRecFlag... flags) {
        _bounds = bounds;
        _paint = paint;
        _backdrop = backdrop;
        int mask = 0;
        for (SaveLayerRecFlag flag : flags)
            mask |= flag._flag;
        _flags = mask;
    }

    @Nullable
    @SuppressWarnings("all")
    public Rect getBounds() {
        return this._bounds;
    }

    @Nullable
    @SuppressWarnings("all")
    public Paint getPaint() {
        return this._paint;
    }

    @Nullable
    @SuppressWarnings("all")
    public ImageFilter getBackdrop() {
        return this._backdrop;
    }

    @SuppressWarnings("all")
    public int getFlags() {
        return this._flags;
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this)
            return true;
        if (!(o instanceof SaveLayerRec))
            return false;
        final SaveLayerRec other = (SaveLayerRec) o;
        if (!other.canEqual((Object) this))
            return false;
        if (this.getFlags() != other.getFlags())
            return false;
        final Object this$_bounds = this.getBounds();
        final Object other$_bounds = other.getBounds();
        if (this$_bounds == null ? other$_bounds != null : !this$_bounds.equals(other$_bounds))
            return false;
        final Object this$_paint = this.getPaint();
        final Object other$_paint = other.getPaint();
        if (this$_paint == null ? other$_paint != null : !this$_paint.equals(other$_paint))
            return false;
        final Object this$_backdrop = this.getBackdrop();
        final Object other$_backdrop = other.getBackdrop();
        if (this$_backdrop == null ? other$_backdrop != null : !this$_backdrop.equals(other$_backdrop))
            return false;
        return true;
    }

    @SuppressWarnings("all")
    protected boolean canEqual(final Object other) {
        return other instanceof SaveLayerRec;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + this.getFlags();
        final Object $_bounds = this.getBounds();
        result = result * PRIME + ($_bounds == null ? 43 : $_bounds.hashCode());
        final Object $_paint = this.getPaint();
        result = result * PRIME + ($_paint == null ? 43 : $_paint.hashCode());
        final Object $_backdrop = this.getBackdrop();
        result = result * PRIME + ($_backdrop == null ? 43 : $_backdrop.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "SaveLayerRec(_bounds=" + this.getBounds() + ", _paint=" + this.getPaint() + ", _backdrop="
                + this.getBackdrop() + ", _flags=" + this.getFlags() + ")";
    }
}
