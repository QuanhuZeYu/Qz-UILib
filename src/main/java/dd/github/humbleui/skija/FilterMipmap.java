// Generated by delombok at Thu Feb 13 14:20:21 UTC 2025
package io.github.humbleui.skija;

import org.jetbrains.annotations.ApiStatus;

public class FilterMipmap implements SamplingMode {
    @ApiStatus.Internal
    public final FilterMode _filterMode;
    @ApiStatus.Internal
    public final MipmapMode _mipmapMode;

    public FilterMipmap(FilterMode filterMode) {
        this(filterMode, MipmapMode.NONE);
    }

    @ApiStatus.Internal
    @Override
    public long _pack() {
        return 4611686018427387903L & (((long) _filterMode.ordinal() << 32) | (long) _mipmapMode.ordinal());
    }

    @SuppressWarnings("all")
    public FilterMode getFilterMode() {
        return this._filterMode;
    }

    @SuppressWarnings("all")
    public MipmapMode getMipmapMode() {
        return this._mipmapMode;
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this)
            return true;
        if (!(o instanceof FilterMipmap))
            return false;
        final FilterMipmap other = (FilterMipmap) o;
        if (!other.canEqual((Object) this))
            return false;
        final Object this$_filterMode = this.getFilterMode();
        final Object other$_filterMode = other.getFilterMode();
        if (this$_filterMode == null ? other$_filterMode != null : !this$_filterMode.equals(other$_filterMode))
            return false;
        final Object this$_mipmapMode = this.getMipmapMode();
        final Object other$_mipmapMode = other.getMipmapMode();
        if (this$_mipmapMode == null ? other$_mipmapMode != null : !this$_mipmapMode.equals(other$_mipmapMode))
            return false;
        return true;
    }

    @SuppressWarnings("all")
    protected boolean canEqual(final Object other) {
        return other instanceof FilterMipmap;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final Object $_filterMode = this.getFilterMode();
        result = result * PRIME + ($_filterMode == null ? 43 : $_filterMode.hashCode());
        final Object $_mipmapMode = this.getMipmapMode();
        result = result * PRIME + ($_mipmapMode == null ? 43 : $_mipmapMode.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "FilterMipmap(_filterMode=" + this.getFilterMode() + ", _mipmapMode=" + this.getMipmapMode() + ")";
    }

    @SuppressWarnings("all")
    public FilterMipmap(final FilterMode filterMode, final MipmapMode mipmapMode) {
        this._filterMode = filterMode;
        this._mipmapMode = mipmapMode;
    }
}
